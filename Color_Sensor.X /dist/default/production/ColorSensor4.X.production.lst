

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov  9 13:35:37 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.44
    24                           ; Generated 14/09/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1829 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020D                     	;# 
   143  020E                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0219                     	;# 
   160  021A                     	;# 
   161  021B                     	;# 
   162  021C                     	;# 
   163  021D                     	;# 
   164  021E                     	;# 
   165  021F                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  029B                     	;# 
   179  029C                     	;# 
   180  029D                     	;# 
   181  029E                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  038C                     	;# 
   191  038D                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221                           
   222                           	psect	stringtext1
   223  01AA                     __pstringtext1:	
   224  01AA                     _dpowers:	
   225  01AA  3401               	retlw	1
   226  01AB  3400               	retlw	0
   227  01AC  340A               	retlw	10
   228  01AD  3400               	retlw	0
   229  01AE  3464               	retlw	100
   230  01AF  3400               	retlw	0
   231  01B0  34E8               	retlw	232
   232  01B1  3403               	retlw	3
   233  01B2  3410               	retlw	16
   234  01B3  3427               	retlw	39
   235  01B4                     __end_of_dpowers:	
   236  0015                     _TMR0	set	21
   237  0019                     _T1GCON	set	25
   238  000B                     _INTCON	set	11
   239  0016                     _TMR1L	set	22
   240  0017                     _TMR1H	set	23
   241  0018                     _T1CON	set	24
   242  0065                     _RA5	set	101
   243  006C                     _RB4	set	108
   244  006D                     _RB5	set	109
   245  008D                     _RCIF	set	141
   246  008C                     _TXIF	set	140
   247  005A                     _TMR0IF	set	90
   248  0088                     _TMR1IF	set	136
   249  008E                     _TRISC	set	142
   250  008D                     _TRISB	set	141
   251  008C                     _TRISA	set	140
   252  0095                     _OPTION_REG	set	149
   253  0099                     _OSCCON	set	153
   254  0474                     _TRISC4	set	1140
   255  0475                     _TRISC5	set	1141
   256  0488                     _TMR1IE	set	1160
   257  046E                     _TRISB6	set	1134
   258  046C                     _TRISB4	set	1132
   259  011D                     _APFCON0	set	285
   260  08BC                     _TSRNG	set	2236
   261  08BD                     _TSEN	set	2237
   262  08EF                     _RXDTSEL	set	2287
   263  08EA                     _TXCKSEL	set	2282
   264  019B                     _SPBRG	set	411
   265  018E                     _ANSELC	set	398
   266  018D                     _ANSELB	set	397
   267  018C                     _ANSELA	set	396
   268  0199                     _RCREG	set	409
   269  019A                     _TXREG	set	410
   270  019E                     _TXSTA	set	414
   271  019D                     _RCSTA	set	413
   272  0CF2                     _BRGH	set	3314
   273  0CEF                     _SPEN	set	3311
   274  0CF4                     _SYNC	set	3316
   275  0CF5                     _TXEN	set	3317
   276  0211                     _SSP1BUF	set	529
   277  0216                     _SSP1CON2bits	set	534
   278  0214                     _SSP1STAT	set	532
   279  0212                     _SSP1ADD	set	530
   280  0216                     _SSP1CON2	set	534
   281  0215                     _SSP1CON1	set	533
   282  01B4                     STR_1:	
   283  01B4  3446               	retlw	70	;'F'
   284  01B5  3472               	retlw	114	;'r'
   285  01B6  3465               	retlw	101	;'e'
   286  01B7  3471               	retlw	113	;'q'
   287  01B8  3475               	retlw	117	;'u'
   288  01B9  3465               	retlw	101	;'e'
   289  01BA  346E               	retlw	110	;'n'
   290  01BB  3463               	retlw	99	;'c'
   291  01BC  3479               	retlw	121	;'y'
   292  01BD  3420               	retlw	32	;' '
   293  01BE  343D               	retlw	61	;'='
   294  01BF  3420               	retlw	32	;' '
   295  01C0  3425               	retlw	37	;'%'
   296  01C1  3464               	retlw	100	;'d'
   297  01C2  3420               	retlw	32	;' '
   298  01C3  340D               	retlw	13
   299  01C4  340A               	retlw	10
   300  01C5  3400               	retlw	0
   301                           
   302                           	psect	stringtext2
   303  0000                     __pstringtext2:	
   304                           
   305                           ; #config settings
   306  0000                     
   307                           	psect	cinit
   308  0044                     start_initialization:	
   309  0044                     __initialization:	
   310                           
   311                           ; Clear objects allocated to COMMON
   312  0044  01F6               	clrf	__pbssCOMMON& (0+127)
   313  0045  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0046  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0047  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   316                           
   317                           ; Clear objects allocated to BANK0
   318  0048  0020               	movlb	0	; select bank0
   319  0049  01C2               	clrf	__pbssBANK0& (0+127)
   320  004A  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   321  004B                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  004B                     __end_of__initialization:	
   325  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   326  004C  0020               	movlb	0
   327  004D  3181  2907         	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0076                     __pbssCOMMON:	
   331  0076                     _count:	
   332  0076                     	ds	2
   333  0078                     _counter:	
   334  0078                     	ds	2
   335                           
   336                           	psect	bssBANK0
   337  0042                     __pbssBANK0:	
   338  0042                     _frequency:	
   339  0042                     	ds	2
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:	
   343  0070                     ?_InitTimer1:	
   344  0070                     ?_setup_comms:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_usartConfig:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_InitTimer0:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_putch:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_isr:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_isr:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	6
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_InitTimer1:	
   369  0020                     ??_setup_comms:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0020                     ??_usartConfig:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0020                     ??_InitTimer0:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0020                     ??_putch:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0020                     ?___lwdiv:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0020                     putch@byte:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0020                     ___lwdiv@divisor:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 2 bytes @ 0x0
   392  0020                     	ds	2
   393  0022                     ___lwdiv@dividend:	
   394                           
   395                           ; 2 bytes @ 0x2
   396  0022                     	ds	2
   397  0024                     ??___lwdiv:	
   398                           
   399                           ; 1 bytes @ 0x4
   400  0024                     	ds	1
   401  0025                     ___lwdiv@counter:	
   402                           
   403                           ; 1 bytes @ 0x5
   404  0025                     	ds	1
   405  0026                     ___lwdiv@quotient:	
   406                           
   407                           ; 2 bytes @ 0x6
   408  0026                     	ds	2
   409  0028                     ?___lwmod:	
   410  0028                     ___lwmod@divisor:	
   411                           ; 2 bytes @ 0x8
   412                           
   413                           
   414                           ; 2 bytes @ 0x8
   415  0028                     	ds	2
   416  002A                     ___lwmod@dividend:	
   417                           
   418                           ; 2 bytes @ 0xA
   419  002A                     	ds	2
   420  002C                     ??___lwmod:	
   421                           
   422                           ; 1 bytes @ 0xC
   423  002C                     	ds	1
   424  002D                     ___lwmod@counter:	
   425                           
   426                           ; 1 bytes @ 0xD
   427  002D                     	ds	1
   428  002E                     ?_printf:	
   429  002E                     printf@f:	
   430                           ; 2 bytes @ 0xE
   431                           
   432                           
   433                           ; 2 bytes @ 0xE
   434  002E                     	ds	4
   435  0032                     ??_printf:	
   436                           
   437                           ; 1 bytes @ 0x12
   438  0032                     	ds	4
   439  0036                     printf@ap:	
   440                           
   441                           ; 1 bytes @ 0x16
   442  0036                     	ds	1
   443  0037                     printf@flag:	
   444                           
   445                           ; 1 bytes @ 0x17
   446  0037                     	ds	1
   447  0038                     printf@prec:	
   448                           
   449                           ; 1 bytes @ 0x18
   450  0038                     	ds	1
   451  0039                     printf@val:	
   452                           
   453                           ; 2 bytes @ 0x19
   454  0039                     	ds	2
   455  003B                     printf@c:	
   456                           
   457                           ; 1 bytes @ 0x1B
   458  003B                     	ds	1
   459  003C                     ?_main:	
   460  003C                     main@argc:	
   461                           ; 2 bytes @ 0x1C
   462                           
   463                           
   464                           ; 2 bytes @ 0x1C
   465  003C                     	ds	2
   466  003E                     main@argv:	
   467                           
   468                           ; 2 bytes @ 0x1E
   469  003E                     	ds	2
   470  0040                     ??_main:	
   471                           
   472                           ; 1 bytes @ 0x20
   473  0040                     	ds	2
   474                           
   475                           	psect	maintext
   476  0107                     __pmaintext:	
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 140 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  argc            2   28[BANK0 ] int 
   485 ;;  argv            2   30[BANK0 ] PTR PTR unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  2   28[BANK0 ] int 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B1F/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;Total ram usage:        6 bytes
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_InitTimer0
   505 ;;		_InitTimer1
   506 ;;		_printf
   507 ;;		_setup_comms
   508 ;;		_usartConfig
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  0107                     _main:	
   517                           
   518                           ;main.c: 141: frequency = 0;
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   522  0107  0020               	movlb	0	; select bank0
   523  0108  01C2               	clrf	_frequency
   524  0109  01C3               	clrf	_frequency+1
   525                           
   526                           ;main.c: 142: TRISA = 0x10;
   527  010A  3010               	movlw	16
   528  010B  0021               	movlb	1	; select bank1
   529  010C  008C               	movwf	12	;volatile
   530                           
   531                           ;main.c: 143: ANSELA =0x00;
   532  010D  0023               	movlb	3	; select bank3
   533  010E  018C               	clrf	12	;volatile
   534                           
   535                           ;main.c: 144: TRISB = 0x30;
   536  010F  3030               	movlw	48
   537  0110  0021               	movlb	1	; select bank1
   538  0111  008D               	movwf	13	;volatile
   539                           
   540                           ;main.c: 145: ANSELB =0x00;
   541  0112  0023               	movlb	3	; select bank3
   542  0113  018D               	clrf	13	;volatile
   543                           
   544                           ;main.c: 146: TRISC = 0xFF;
   545  0114  30FF               	movlw	255
   546  0115  0021               	movlb	1	; select bank1
   547  0116  008E               	movwf	14	;volatile
   548                           
   549                           ;main.c: 147: ANSELC =0x00;
   550  0117  0023               	movlb	3	; select bank3
   551  0118  018E               	clrf	14	;volatile
   552                           
   553                           ;main.c: 148: RB5 = 0;
   554  0119  0020               	movlb	0	; select bank0
   555  011A  128D               	bcf	13,5	;volatile
   556                           
   557                           ;main.c: 149: RB4 = 0;
   558  011B  120D               	bcf	13,4	;volatile
   559                           
   560                           ;main.c: 150: RA5 = 0;
   561  011C  128C               	bcf	12,5	;volatile
   562                           
   563                           ;main.c: 151: setup_comms();
   564  011D  3181  21C6  3181   	fcall	_setup_comms
   565                           
   566                           ;main.c: 152: TSEN = 1;
   567  0120  0022               	movlb	2	; select bank2
   568  0121  1697               	bsf	23,5	;volatile
   569                           
   570                           ;main.c: 153: TSRNG = 0;
   571  0122  1217               	bcf	23,4	;volatile
   572                           
   573                           ;main.c: 154: usartConfig();
   574  0123  3181  21F4  3181   	fcall	_usartConfig
   575                           
   576                           ;main.c: 155: InitTimer0();
   577  0126  3181  21ED  3181   	fcall	_InitTimer0
   578                           
   579                           ;main.c: 156: InitTimer1();
   580  0129  3181  21D7  3181   	fcall	_InitTimer1
   581  012C                     l1389:	
   582                           ;main.c: 157: while(1){
   583                           
   584                           
   585                           ;main.c: 158: RA5 =0;
   586  012C  0020               	movlb	0	; select bank0
   587  012D  128C               	bcf	12,5	;volatile
   588                           
   589                           ;main.c: 159: RA5=1;
   590  012E  168C               	bsf	12,5	;volatile
   591                           
   592                           ;main.c: 160: printf("Frequency = %d \r\n", frequency);
   593  012F  30B4               	movlw	low (STR_1| (0+32768))
   594  0130  00AE               	movwf	printf@f
   595  0131  3081               	movlw	high (STR_1| (0+32768))
   596  0132  00AF               	movwf	printf@f+1
   597  0133  0843               	movf	_frequency+1,w
   598  0134  00B1               	movwf	?_printf+3
   599  0135  0842               	movf	_frequency,w
   600  0136  00B0               	movwf	?_printf+2
   601  0137  3180  204F  3181   	fcall	_printf
   602                           
   603                           ;main.c: 161: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
   604  013A  3006               	movlw	6
   605  013B  0020               	movlb	0	; select bank0
   606  013C  00C1               	movwf	??_main+1
   607  013D  3013               	movlw	19
   608  013E  00C0               	movwf	??_main
   609  013F  30AD               	movlw	173
   610  0140                     u837:	
   611  0140  0B89               	decfsz	9,f
   612  0141  2940               	goto	u837
   613  0142  0BC0               	decfsz	??_main,f
   614  0143  2940               	goto	u837
   615  0144  0BC1               	decfsz	??_main+1,f
   616  0145  2940               	goto	u837
   617  0146  3200               	nop2
   618  0147  292C               	goto	l1389
   619  0148                     __end_of_main:	
   620                           ;main.c: 162: }
   621                           ;main.c: 165: return(0);
   622                           ;	Return value of _main is never used
   623                           
   624                           
   625                           	psect	text1
   626  01F4                     __ptext1:	
   627 ;; *************** function _usartConfig *****************
   628 ;; Defined at:
   629 ;;		line 81 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _usartConfig
   659  01F4                     _usartConfig:	
   660                           
   661                           ;main.c: 82: APFCON0 = 0x84;
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _usartConfig: [wreg]
   665  01F4  3084               	movlw	132
   666  01F5  0022               	movlb	2	; select bank2
   667  01F6  009D               	movwf	29	;volatile
   668                           
   669                           ;main.c: 83: TXCKSEL = 1;
   670  01F7  151D               	bsf	29,2	;volatile
   671                           
   672                           ;main.c: 84: RXDTSEL = 1;
   673  01F8  179D               	bsf	29,7	;volatile
   674  01F9  0008               	return
   675  01FA                     __end_of_usartConfig:	
   676                           
   677                           	psect	text2
   678  01C6                     __ptext2:	
   679 ;; *************** function _setup_comms *****************
   680 ;; Defined at:
   681 ;;		line 68 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _setup_comms
   711  01C6                     _setup_comms:	
   712                           
   713                           ;main.c: 69: TRISC5 = 1;
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _setup_comms: [wreg]
   717  01C6  0021               	movlb	1	; select bank1
   718  01C7  168E               	bsf	14,5	;volatile
   719                           
   720                           ;main.c: 70: TRISC4 = 1;
   721  01C8  160E               	bsf	14,4	;volatile
   722                           
   723                           ;main.c: 72: SPBRG = ((int)(4000000L/(16UL * 9600) -1));
   724  01C9  3000               	movlw	0
   725  01CA  0023               	movlb	3	; select bank3
   726  01CB  009C               	movwf	28	;volatile
   727  01CC  3019               	movlw	25
   728  01CD  009B               	movwf	27	;volatile
   729                           
   730                           ;main.c: 73: RCSTA = (0 | 0x90);
   731  01CE  3090               	movlw	144
   732  01CF  009D               	movwf	29	;volatile
   733                           
   734                           ;main.c: 74: TXSTA = (0x4 | 0 | 0x20);
   735  01D0  3024               	movlw	36
   736  01D1  009E               	movwf	30	;volatile
   737                           
   738                           ;main.c: 75: TXEN = 1;
   739  01D2  169E               	bsf	30,5	;volatile
   740                           
   741                           ;main.c: 76: SYNC = 0;
   742  01D3  121E               	bcf	30,4	;volatile
   743                           
   744                           ;main.c: 77: SPEN = 1;
   745  01D4  179D               	bsf	29,7	;volatile
   746                           
   747                           ;main.c: 78: BRGH = 1;
   748  01D5  151E               	bsf	30,2	;volatile
   749  01D6  0008               	return
   750  01D7                     __end_of_setup_comms:	
   751                           
   752                           	psect	text3
   753  004F                     __ptext3:	
   754 ;; *************** function _printf *****************
   755 ;; Defined at:
   756 ;;		line 464 in file "/Applications/microchip/xc8/v1.44/sources/common/doprnt.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  f               2   14[BANK0 ] PTR const unsigned char 
   759 ;;		 -> STR_1(18), 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  tmpval          4    0        struct .
   762 ;;  val             2   25[BANK0 ] unsigned int 
   763 ;;  cp              2    0        PTR const unsigned char 
   764 ;;  len             2    0        unsigned int 
   765 ;;  c               1   27[BANK0 ] char 
   766 ;;  prec            1   24[BANK0 ] char 
   767 ;;  flag            1   23[BANK0 ] unsigned char 
   768 ;;  ap              1   22[BANK0 ] PTR void [1]
   769 ;;		 -> ?_printf(2), 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2   14[BANK0 ] int 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   780 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   781 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   782 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
   783 ;;Total ram usage:       14 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    2
   786 ;; This function calls:
   787 ;;		___lwdiv
   788 ;;		___lwmod
   789 ;;		_putch
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _printf
   797  004F                     _printf:	
   798                           
   799                           ;doprnt.c: 466: va_list ap;
   800                           ;doprnt.c: 499: signed char c;
   801                           ;doprnt.c: 506: signed char prec;
   802                           ;doprnt.c: 508: unsigned char flag;
   803                           ;doprnt.c: 523: union {
   804                           ;doprnt.c: 524: unsigned long vd;
   805                           ;doprnt.c: 525: double integ;
   806                           ;doprnt.c: 526: } tmpval;
   807                           ;doprnt.c: 528: unsigned int val;
   808                           ;doprnt.c: 529: unsigned len;
   809                           ;doprnt.c: 530: const char * cp;
   810                           ;doprnt.c: 533: *ap = __va_start();
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   814  004F  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
   815  0050  0020               	movlb	0	; select bank0
   816  0051  00B2               	movwf	??_printf
   817  0052  0832               	movf	??_printf,w
   818  0053  00B6               	movwf	printf@ap
   819  0054                     l1355:	
   820                           ;doprnt.c: 536: while(c = *f++) {
   821                           
   822  0054  0020               	movlb	0	; select bank0
   823  0055  082F               	movf	printf@f+1,w
   824  0056  00B3               	movwf	??_printf+1
   825  0057  082E               	movf	printf@f,w
   826  0058  00B2               	movwf	??_printf
   827  0059  0AAE               	incf	printf@f,f
   828  005A  1903               	skipnz
   829  005B  0AAF               	incf	printf@f+1,f
   830  005C  0832               	movf	??_printf,w
   831  005D  0084               	movwf	4
   832  005E  0833               	movf	??_printf+1,w
   833  005F  0085               	movwf	5
   834  0060  0800               	movf	0,w	;code access
   835  0061  00B4               	movwf	??_printf+2
   836  0062  0834               	movf	??_printf+2,w
   837  0063  00BB               	movwf	printf@c
   838  0064  083B               	movf	printf@c,w
   839  0065  1903               	btfsc	3,2
   840  0066  0008               	return
   841                           
   842                           ;doprnt.c: 538: if(c != '%')
   843  0067  3025               	movlw	37
   844  0068  063B               	xorwf	printf@c,w
   845  0069  1903               	btfsc	3,2
   846  006A  2870               	goto	l1315
   847                           
   848                           ;doprnt.c: 540: {
   849                           ;doprnt.c: 541: (putch(c) );
   850  006B  083B               	movf	printf@c,w
   851  006C  3181  21E5  3180   	fcall	_putch
   852                           
   853                           ;doprnt.c: 542: continue;
   854  006F  2854               	goto	l1355
   855  0070                     l1315:	
   856                           
   857                           ;doprnt.c: 543: }
   858                           ;doprnt.c: 548: flag = 0;
   859  0070  0020               	movlb	0	; select bank0
   860  0071  01B7               	clrf	printf@flag
   861                           
   862                           ;doprnt.c: 822: }
   863                           
   864                           ;doprnt.c: 813: continue;
   865                           
   866                           ;doprnt.c: 802: default:
   867                           
   868                           ;doprnt.c: 698: case 'i':
   869                           ;doprnt.c: 699: break;
   870                           
   871                           ;doprnt.c: 697: case 'd':
   872                           
   873                           ;doprnt.c: 638: goto alldone;
   874                           
   875                           ;doprnt.c: 637: case 0:
   876                           
   877                           ;doprnt.c: 635: switch(c = *f++) {
   878  0072  082F               	movf	printf@f+1,w
   879  0073  00B3               	movwf	??_printf+1
   880  0074  082E               	movf	printf@f,w
   881  0075  00B2               	movwf	??_printf
   882  0076  0AAE               	incf	printf@f,f
   883  0077  1903               	skipnz
   884  0078  0AAF               	incf	printf@f+1,f
   885  0079  0832               	movf	??_printf,w
   886  007A  0084               	movwf	4
   887  007B  0833               	movf	??_printf+1,w
   888  007C  0085               	movwf	5
   889  007D  0800               	movf	0,w	;code access
   890  007E  00BB               	movwf	printf@c
   891                           
   892                           ; Switch size 1, requested type "space"
   893                           ; Number of cases is 3, Range of values is 0 to 105
   894                           ; switch strategies available:
   895                           ; Name         Instructions Cycles
   896                           ; simple_byte           10     6 (average)
   897                           ; direct_byte          218     6 (fixed)
   898                           ; jumptable            260     6 (fixed)
   899                           ;	Chosen strategy is simple_byte
   900  007F  3A00               	xorlw	0	; case 0
   901  0080  1903               	skipnz
   902  0081  2906               	goto	l225
   903  0082  3A64               	xorlw	100	; case 100
   904  0083  1903               	skipnz
   905  0084  2889               	goto	l1321
   906  0085  3A0D               	xorlw	13	; case 105
   907  0086  1903               	skipnz
   908  0087  2889               	goto	l1321
   909  0088  2854               	goto	l1355
   910  0089                     l1321:	
   911                           
   912                           ;doprnt.c: 1253: {
   913                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   914  0089  0836               	movf	printf@ap,w
   915  008A  0086               	movwf	6
   916  008B  0187               	clrf	7
   917  008C  3F40               	moviw [0]fsr1
   918  008D  00B9               	movwf	printf@val
   919  008E  3F41               	moviw [1]fsr1
   920  008F  00BA               	movwf	printf@val+1
   921  0090  3002               	movlw	2
   922  0091  00B2               	movwf	??_printf
   923  0092  0832               	movf	??_printf,w
   924  0093  07B6               	addwf	printf@ap,f
   925                           
   926                           ;doprnt.c: 1261: if((int)val < 0) {
   927  0094  1FBA               	btfss	printf@val+1,7
   928  0095  289F               	goto	l1331
   929                           
   930                           ;doprnt.c: 1262: flag |= 0x03;
   931  0096  3003               	movlw	3
   932  0097  00B2               	movwf	??_printf
   933  0098  0832               	movf	??_printf,w
   934  0099  04B7               	iorwf	printf@flag,f
   935                           
   936                           ;doprnt.c: 1263: val = -val;
   937  009A  09B9               	comf	printf@val,f
   938  009B  09BA               	comf	printf@val+1,f
   939  009C  0AB9               	incf	printf@val,f
   940  009D  1903               	skipnz
   941  009E  0ABA               	incf	printf@val+1,f
   942  009F                     l1331:	
   943                           
   944                           ;doprnt.c: 1264: }
   945                           ;doprnt.c: 1266: }
   946                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   947  009F  01BB               	clrf	printf@c
   948  00A0  0ABB               	incf	printf@c,f
   949  00A1  3005               	movlw	5
   950  00A2  063B               	xorwf	printf@c,w
   951  00A3  1903               	btfsc	3,2
   952  00A4  28C4               	goto	l1343
   953  00A5                     l1337:	
   954                           
   955                           ;doprnt.c: 1306: if(val < dpowers[c])
   956  00A5  083B               	movf	printf@c,w
   957  00A6  00B2               	movwf	??_printf
   958  00A7  01B3               	clrf	??_printf+1
   959  00A8  35B2               	lslf	??_printf,f
   960  00A9  0DB3               	rlf	??_printf+1,f
   961  00AA  30AA               	movlw	low (_dpowers| (0+32768))
   962  00AB  0732               	addwf	??_printf,w
   963  00AC  0084               	movwf	4
   964  00AD  3081               	movlw	high (_dpowers| (0+32768))
   965  00AE  3D33               	addwfc	??_printf+1,w
   966  00AF  0085               	movwf	5
   967  00B0  3F00               	moviw [0]fsr0
   968  00B1  00B4               	movwf	??_printf+2
   969  00B2  3F01               	moviw [1]fsr0
   970  00B3  00B5               	movwf	??_printf+3
   971  00B4  0835               	movf	??_printf+3,w
   972  00B5  023A               	subwf	printf@val+1,w
   973  00B6  1D03               	skipz
   974  00B7  28BA               	goto	u785
   975  00B8  0834               	movf	??_printf+2,w
   976  00B9  0239               	subwf	printf@val,w
   977  00BA                     u785:	
   978  00BA  1C03               	btfss	3,0
   979  00BB  28C4               	goto	l1343
   980                           
   981                           ;doprnt.c: 1307: break;
   982  00BC  3001               	movlw	1
   983  00BD  00B2               	movwf	??_printf
   984  00BE  0832               	movf	??_printf,w
   985  00BF  07BB               	addwf	printf@c,f
   986  00C0  3005               	movlw	5
   987  00C1  063B               	xorwf	printf@c,w
   988  00C2  1D03               	btfss	3,2
   989  00C3  28A5               	goto	l1337
   990  00C4                     l1343:	
   991                           
   992                           ;doprnt.c: 1422: {
   993                           ;doprnt.c: 1438: if(flag & 0x03)
   994  00C4  0837               	movf	printf@flag,w
   995  00C5  3903               	andlw	3
   996  00C6  1903               	btfsc	3,2
   997  00C7  28CC               	goto	l1347
   998                           
   999                           ;doprnt.c: 1439: (putch('-') );
  1000  00C8  302D               	movlw	45
  1001  00C9  3181  21E5  3180   	fcall	_putch
  1002  00CC                     l1347:	
  1003                           
  1004                           ;doprnt.c: 1469: }
  1005                           ;doprnt.c: 1472: prec = c;
  1006  00CC  0020               	movlb	0	; select bank0
  1007  00CD  083B               	movf	printf@c,w
  1008  00CE  00B2               	movwf	??_printf
  1009  00CF  0832               	movf	??_printf,w
  1010  00D0  00B8               	movwf	printf@prec
  1011  00D1                     l1353:	
  1012                           ;doprnt.c: 1474: while(prec--) {
  1013                           
  1014  00D1  30FF               	movlw	255
  1015  00D2  0020               	movlb	0	; select bank0
  1016  00D3  00B2               	movwf	??_printf
  1017  00D4  0832               	movf	??_printf,w
  1018  00D5  07B8               	addwf	printf@prec,f
  1019  00D6  0A38               	incf	printf@prec,w
  1020  00D7  1903               	btfsc	3,2
  1021  00D8  2854               	goto	l1355
  1022                           
  1023                           ;doprnt.c: 1478: {
  1024                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1025  00D9  300A               	movlw	10
  1026  00DA  00A8               	movwf	___lwmod@divisor
  1027  00DB  3000               	movlw	0
  1028  00DC  00A9               	movwf	___lwmod@divisor+1
  1029  00DD  0838               	movf	printf@prec,w
  1030  00DE  00B2               	movwf	??_printf
  1031  00DF  01B3               	clrf	??_printf+1
  1032  00E0  35B2               	lslf	??_printf,f
  1033  00E1  0DB3               	rlf	??_printf+1,f
  1034  00E2  30AA               	movlw	low (_dpowers| (0+32768))
  1035  00E3  0732               	addwf	??_printf,w
  1036  00E4  0084               	movwf	4
  1037  00E5  3081               	movlw	high (_dpowers| (0+32768))
  1038  00E6  3D33               	addwfc	??_printf+1,w
  1039  00E7  0085               	movwf	5
  1040  00E8  3F00               	moviw [0]fsr0
  1041  00E9  00A0               	movwf	___lwdiv@divisor
  1042  00EA  3F01               	moviw [1]fsr0
  1043  00EB  00A1               	movwf	___lwdiv@divisor+1
  1044  00EC  083A               	movf	printf@val+1,w
  1045  00ED  00A3               	movwf	___lwdiv@dividend+1
  1046  00EE  0839               	movf	printf@val,w
  1047  00EF  00A2               	movwf	___lwdiv@dividend
  1048  00F0  3181  2148  3180   	fcall	___lwdiv
  1049  00F3  0020               	movlb	0	; select bank0
  1050  00F4  0821               	movf	?___lwdiv+1,w
  1051  00F5  00AB               	movwf	___lwmod@dividend+1
  1052  00F6  0820               	movf	?___lwdiv,w
  1053  00F7  00AA               	movwf	___lwmod@dividend
  1054  00F8  3181  217D  3180   	fcall	___lwmod
  1055  00FB  0020               	movlb	0	; select bank0
  1056  00FC  0828               	movf	?___lwmod,w
  1057  00FD  3E30               	addlw	48
  1058  00FE  00B4               	movwf	??_printf+2
  1059  00FF  0834               	movf	??_printf+2,w
  1060  0100  00BB               	movwf	printf@c
  1061                           
  1062                           ;doprnt.c: 1523: }
  1063                           ;doprnt.c: 1524: (putch(c) );
  1064  0101  083B               	movf	printf@c,w
  1065  0102  3181  21E5  3180   	fcall	_putch
  1066  0105  28D1               	goto	l1353
  1067  0106                     l225:	
  1068                           ;doprnt.c: 1540: return 0;
  1069                           ;	Return value of _printf is never used
  1070                           
  1071                           ;doprnt.c: 1525: }
  1072                           ;doprnt.c: 1533: }
  1073                           ;doprnt.c: 1535: alldone:
  1074                           
  1075  0106  0008               	return
  1076  0107                     __end_of_printf:	
  1077                           
  1078                           	psect	text4
  1079  01E5                     __ptext4:	
  1080 ;; *************** function _putch *****************
  1081 ;; Defined at:
  1082 ;;		line 95 in file "main.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  byte            1    wreg     unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  byte            1    0[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1100 ;;Total ram usage:        1 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_printf
  1107 ;;		_getche
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _putch
  1113  01E5                     _putch:	
  1114                           
  1115                           ;incstack = 0
  1116                           ; Regs used in _putch: [wreg]
  1117                           ;putch@byte stored from wreg
  1118  01E5  0020               	movlb	0	; select bank0
  1119  01E6  00A0               	movwf	putch@byte
  1120  01E7                     l167:	
  1121                           ;main.c: 99: continue;
  1122                           
  1123                           ;main.c: 98: while(!TXIF)
  1124                           
  1125  01E7  1E11               	btfss	17,4	;volatile
  1126  01E8  29E7               	goto	l167
  1127                           
  1128                           ;main.c: 100: TXREG = byte;
  1129  01E9  0820               	movf	putch@byte,w
  1130  01EA  0023               	movlb	3	; select bank3
  1131  01EB  009A               	movwf	26	;volatile
  1132  01EC  0008               	return
  1133  01ED                     __end_of_putch:	
  1134                           
  1135                           	psect	text5
  1136  017D                     __ptext5:	
  1137 ;; *************** function ___lwmod *****************
  1138 ;; Defined at:
  1139 ;;		line 6 in file "/Applications/microchip/xc8/v1.44/sources/common/lwmod.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  divisor         2    8[BANK0 ] unsigned int 
  1142 ;;  dividend        2   10[BANK0 ] unsigned int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  counter         1   13[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2    8[BANK0 ] unsigned int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_printf
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function ___lwmod
  1170  017D                     ___lwmod:	
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1174  017D  0020               	movlb	0	; select bank0
  1175  017E  0828               	movf	___lwmod@divisor,w
  1176  017F  0429               	iorwf	___lwmod@divisor+1,w
  1177  0180  1903               	btfsc	3,2
  1178  0181  29A5               	goto	l1273
  1179  0182  01AD               	clrf	___lwmod@counter
  1180  0183  0AAD               	incf	___lwmod@counter,f
  1181  0184                     l1263:	
  1182  0184  1BA9               	btfsc	___lwmod@divisor+1,7
  1183  0185  2990               	goto	l1265
  1184  0186  3001               	movlw	1
  1185  0187                     u705:	
  1186  0187  35A8               	lslf	___lwmod@divisor,f
  1187  0188  0DA9               	rlf	___lwmod@divisor+1,f
  1188  0189  0B89               	decfsz	9,f
  1189  018A  2987               	goto	u705
  1190  018B  3001               	movlw	1
  1191  018C  00AC               	movwf	??___lwmod
  1192  018D  082C               	movf	??___lwmod,w
  1193  018E  07AD               	addwf	___lwmod@counter,f
  1194  018F  2984               	goto	l1263
  1195  0190                     l1265:	
  1196  0190  0829               	movf	___lwmod@divisor+1,w
  1197  0191  022B               	subwf	___lwmod@dividend+1,w
  1198  0192  1D03               	skipz
  1199  0193  2996               	goto	u725
  1200  0194  0828               	movf	___lwmod@divisor,w
  1201  0195  022A               	subwf	___lwmod@dividend,w
  1202  0196                     u725:	
  1203  0196  1C03               	skipc
  1204  0197  299C               	goto	l1269
  1205  0198  0828               	movf	___lwmod@divisor,w
  1206  0199  02AA               	subwf	___lwmod@dividend,f
  1207  019A  0829               	movf	___lwmod@divisor+1,w
  1208  019B  3BAB               	subwfb	___lwmod@dividend+1,f
  1209  019C                     l1269:	
  1210  019C  3001               	movlw	1
  1211  019D                     u735:	
  1212  019D  36A9               	lsrf	___lwmod@divisor+1,f
  1213  019E  0CA8               	rrf	___lwmod@divisor,f
  1214  019F  0B89               	decfsz	9,f
  1215  01A0  299D               	goto	u735
  1216  01A1  3001               	movlw	1
  1217  01A2  02AD               	subwf	___lwmod@counter,f
  1218  01A3  1D03               	btfss	3,2
  1219  01A4  2990               	goto	l1265
  1220  01A5                     l1273:	
  1221  01A5  082B               	movf	___lwmod@dividend+1,w
  1222  01A6  00A9               	movwf	?___lwmod+1
  1223  01A7  082A               	movf	___lwmod@dividend,w
  1224  01A8  00A8               	movwf	?___lwmod
  1225  01A9  0008               	return
  1226  01AA                     __end_of___lwmod:	
  1227                           
  1228                           	psect	text6
  1229  0148                     __ptext6:	
  1230 ;; *************** function ___lwdiv *****************
  1231 ;; Defined at:
  1232 ;;		line 6 in file "/Applications/microchip/xc8/v1.44/sources/common/lwdiv.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  divisor         2    0[BANK0 ] unsigned int 
  1235 ;;  dividend        2    2[BANK0 ] unsigned int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  quotient        2    6[BANK0 ] unsigned int 
  1238 ;;  counter         1    5[BANK0 ] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  2    0[BANK0 ] unsigned int 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1251 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1252 ;;Total ram usage:        8 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_printf
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function ___lwdiv
  1264  0148                     ___lwdiv:	
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1268  0148  0020               	movlb	0	; select bank0
  1269  0149  01A6               	clrf	___lwdiv@quotient
  1270  014A  01A7               	clrf	___lwdiv@quotient+1
  1271  014B  0820               	movf	___lwdiv@divisor,w
  1272  014C  0421               	iorwf	___lwdiv@divisor+1,w
  1273  014D  1903               	btfsc	3,2
  1274  014E  2978               	goto	l1251
  1275  014F  01A5               	clrf	___lwdiv@counter
  1276  0150  0AA5               	incf	___lwdiv@counter,f
  1277  0151                     l1239:	
  1278  0151  1BA1               	btfsc	___lwdiv@divisor+1,7
  1279  0152  295D               	goto	l1241
  1280  0153  3001               	movlw	1
  1281  0154                     u635:	
  1282  0154  35A0               	lslf	___lwdiv@divisor,f
  1283  0155  0DA1               	rlf	___lwdiv@divisor+1,f
  1284  0156  0B89               	decfsz	9,f
  1285  0157  2954               	goto	u635
  1286  0158  3001               	movlw	1
  1287  0159  00A4               	movwf	??___lwdiv
  1288  015A  0824               	movf	??___lwdiv,w
  1289  015B  07A5               	addwf	___lwdiv@counter,f
  1290  015C  2951               	goto	l1239
  1291  015D                     l1241:	
  1292  015D  3001               	movlw	1
  1293  015E                     u655:	
  1294  015E  35A6               	lslf	___lwdiv@quotient,f
  1295  015F  0DA7               	rlf	___lwdiv@quotient+1,f
  1296  0160  0B89               	decfsz	9,f
  1297  0161  295E               	goto	u655
  1298  0162  0821               	movf	___lwdiv@divisor+1,w
  1299  0163  0223               	subwf	___lwdiv@dividend+1,w
  1300  0164  1D03               	skipz
  1301  0165  2968               	goto	u665
  1302  0166  0820               	movf	___lwdiv@divisor,w
  1303  0167  0222               	subwf	___lwdiv@dividend,w
  1304  0168                     u665:	
  1305  0168  1C03               	skipc
  1306  0169  296F               	goto	l1247
  1307  016A  0820               	movf	___lwdiv@divisor,w
  1308  016B  02A2               	subwf	___lwdiv@dividend,f
  1309  016C  0821               	movf	___lwdiv@divisor+1,w
  1310  016D  3BA3               	subwfb	___lwdiv@dividend+1,f
  1311  016E  1426               	bsf	___lwdiv@quotient,0
  1312  016F                     l1247:	
  1313  016F  3001               	movlw	1
  1314  0170                     u675:	
  1315  0170  36A1               	lsrf	___lwdiv@divisor+1,f
  1316  0171  0CA0               	rrf	___lwdiv@divisor,f
  1317  0172  0B89               	decfsz	9,f
  1318  0173  2970               	goto	u675
  1319  0174  3001               	movlw	1
  1320  0175  02A5               	subwf	___lwdiv@counter,f
  1321  0176  1D03               	btfss	3,2
  1322  0177  295D               	goto	l1241
  1323  0178                     l1251:	
  1324  0178  0827               	movf	___lwdiv@quotient+1,w
  1325  0179  00A1               	movwf	?___lwdiv+1
  1326  017A  0826               	movf	___lwdiv@quotient,w
  1327  017B  00A0               	movwf	?___lwdiv
  1328  017C  0008               	return
  1329  017D                     __end_of___lwdiv:	
  1330                           
  1331                           	psect	text7
  1332  01D7                     __ptext7:	
  1333 ;; *************** function _InitTimer1 *****************
  1334 ;; Defined at:
  1335 ;;		line 58 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _InitTimer1
  1365  01D7                     _InitTimer1:	
  1366                           
  1367                           ;main.c: 59: T1CON = 0x85;
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _InitTimer1: [wreg+status,2]
  1371  01D7  3085               	movlw	133
  1372  01D8  0020               	movlb	0	; select bank0
  1373  01D9  0098               	movwf	24	;volatile
  1374                           
  1375                           ;main.c: 60: TMR1H = 0;
  1376  01DA  0197               	clrf	23	;volatile
  1377                           
  1378                           ;main.c: 61: TMR1L = 0;
  1379  01DB  0196               	clrf	22	;volatile
  1380                           
  1381                           ;main.c: 62: TMR1IF = 0;
  1382  01DC  1011               	bcf	17,0	;volatile
  1383                           
  1384                           ;main.c: 63: TMR1IE = 1;
  1385  01DD  0021               	movlb	1	; select bank1
  1386  01DE  1411               	bsf	17,0	;volatile
  1387                           
  1388                           ;main.c: 64: INTCON = 0xE0;
  1389  01DF  30E0               	movlw	224
  1390  01E0  008B               	movwf	11	;volatile
  1391                           
  1392                           ;main.c: 65: T1GCON = 0XA1;
  1393  01E1  30A1               	movlw	161
  1394  01E2  0020               	movlb	0	; select bank0
  1395  01E3  0099               	movwf	25	;volatile
  1396  01E4  0008               	return
  1397  01E5                     __end_of_InitTimer1:	
  1398                           
  1399                           	psect	text8
  1400  01ED                     __ptext8:	
  1401 ;; *************** function _InitTimer0 *****************
  1402 ;; Defined at:
  1403 ;;		line 88 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _InitTimer0
  1433  01ED                     _InitTimer0:	
  1434                           
  1435                           ;main.c: 89: OSCCON = 0X6A;
  1436                           
  1437                           ;incstack = 0
  1438                           ; Regs used in _InitTimer0: [wreg]
  1439  01ED  306A               	movlw	106
  1440  01EE  0021               	movlb	1	; select bank1
  1441  01EF  0099               	movwf	25	;volatile
  1442                           
  1443                           ;main.c: 90: OPTION_REG = 0xC5;
  1444  01F0  30C5               	movlw	197
  1445  01F1  0095               	movwf	21	;volatile
  1446                           
  1447                           ;main.c: 91: TMR0IF = 0;
  1448  01F2  110B               	bcf	11,2	;volatile
  1449  01F3  0008               	return
  1450  01F4                     __end_of_InitTimer0:	
  1451                           
  1452                           	psect	intentry
  1453  0004                     __pintentry:	
  1454 ;; *************** function _isr *****************
  1455 ;; Defined at:
  1456 ;;		line 116 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;Total ram usage:        6 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		Interrupt level 1
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483  0004                     _isr:	
  1484                           
  1485                           ;incstack = 0
  1486  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1487                           
  1488                           ; Regs used in _isr: [wreg+status,2+status,0]
  1489  0005  3180               	pagesel	$
  1490  0006  0020               	movlb	0	; select bank0
  1491  0007  087F               	movf	127,w
  1492  0008  00F5               	movwf	??_isr+5
  1493                           
  1494                           ;main.c: 119: if (TMR0IF){
  1495  0009  1D0B               	btfss	11,2	;volatile
  1496  000A  2834               	goto	i1l1181
  1497                           
  1498                           ;main.c: 120: count++;
  1499  000B  3001               	movlw	1
  1500  000C  07F6               	addwf	_count,f
  1501  000D  3000               	movlw	0
  1502  000E  3DF7               	addwfc	_count+1,f
  1503                           
  1504                           ;main.c: 121: TMR0IF = 0;
  1505  000F  110B               	bcf	11,2	;volatile
  1506                           
  1507                           ;main.c: 122: TMR0 = 0;
  1508  0010  0195               	clrf	21	;volatile
  1509                           
  1510                           ;main.c: 124: if (count >= 300) {
  1511  0011  0877               	movf	_count+1,w
  1512  0012  3A80               	xorlw	128
  1513  0013  00F0               	movwf	??_isr
  1514  0014  3081               	movlw	129
  1515  0015  0270               	subwf	??_isr,w
  1516  0016  1D03               	skipz
  1517  0017  281A               	goto	u59_25
  1518  0018  302C               	movlw	44
  1519  0019  0276               	subwf	_count,w
  1520  001A                     u59_25:	
  1521  001A  1C03               	skipc
  1522  001B  2834               	goto	i1l1181
  1523                           
  1524                           ;main.c: 125: frequency=(TMR1H << 8) + TMR1L + (counter*256);
  1525  001C  0879               	movf	_counter+1,w
  1526  001D  00F1               	movwf	??_isr+1
  1527  001E  0878               	movf	_counter,w
  1528  001F  00F0               	movwf	??_isr
  1529  0020  0870               	movf	??_isr,w
  1530  0021  00F1               	movwf	??_isr+1
  1531  0022  01F0               	clrf	??_isr
  1532  0023  0870               	movf	??_isr,w
  1533  0024  0020               	movlb	0	; select bank0
  1534  0025  0716               	addwf	22,w	;volatile
  1535  0026  00F3               	movwf	??_isr+3
  1536  0027  0871               	movf	??_isr+1,w
  1537  0028  3D17               	addwfc	23,w	;volatile
  1538  0029  00F4               	movwf	??_isr+4
  1539  002A  0873               	movf	??_isr+3,w
  1540  002B  00C2               	movwf	_frequency
  1541  002C  0874               	movf	??_isr+4,w
  1542  002D  00C3               	movwf	_frequency+1
  1543                           
  1544                           ;main.c: 126: TMR1H = 0;
  1545  002E  0197               	clrf	23	;volatile
  1546                           
  1547                           ;main.c: 127: TMR1L = 0;
  1548  002F  0196               	clrf	22	;volatile
  1549                           
  1550                           ;main.c: 128: counter=0;
  1551  0030  01F8               	clrf	_counter
  1552  0031  01F9               	clrf	_counter+1
  1553                           
  1554                           ;main.c: 129: count = 0;
  1555  0032  01F6               	clrf	_count
  1556  0033  01F7               	clrf	_count+1
  1557  0034                     i1l1181:	
  1558                           
  1559                           ;main.c: 130: }
  1560                           ;main.c: 131: }
  1561                           ;main.c: 133: if (TMR1IF){
  1562  0034  0020               	movlb	0	; select bank0
  1563  0035  1C11               	btfss	17,0	;volatile
  1564  0036  283E               	goto	i1l187
  1565                           
  1566                           ;main.c: 134: TMR1IF = 0;
  1567  0037  1011               	bcf	17,0	;volatile
  1568                           
  1569                           ;main.c: 135: TMR1H = 0;
  1570  0038  0197               	clrf	23	;volatile
  1571                           
  1572                           ;main.c: 136: TMR1L = 0;
  1573  0039  0196               	clrf	22	;volatile
  1574                           
  1575                           ;main.c: 137: counter++;
  1576  003A  3001               	movlw	1
  1577  003B  07F8               	addwf	_counter,f
  1578  003C  3000               	movlw	0
  1579  003D  3DF9               	addwfc	_counter+1,f
  1580  003E                     i1l187:	
  1581  003E  0875               	movf	??_isr+5,w
  1582  003F  00FF               	movwf	127
  1583  0040  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1584  0041  0009               	retfie
  1585  0042                     __end_of_isr:	
  1586  007E                     btemp	set	126	;btemp
  1587  007E                     int$flags	set	126
  1588  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     34      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4    1392
                                             28 BANK0      6     2      4
                         _InitTimer0
                         _InitTimer1
                             _printf
                        _setup_comms
                        _usartConfig
 ---------------------------------------------------------------------------------
 (1) _usartConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_comms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1392
                                             14 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _setup_comms
   _usartConfig

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      24       5       45.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      2E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      2E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov  9 13:35:37 2017

            __CFG_CP$OFF 0000                      l225 0106                      l167 01E7  
                    _RA5 0065                      _RB4 006C                      _RB5 006D  
           __CFG_CPD$OFF 0000                      u705 0187                      u635 0154  
                    u725 0196                      u655 015E                      u735 019D  
                    u665 0168                      u675 0170                      u837 0140  
                    u785 00BA                      _isr 0004             __CFG_BORV$LO 0000  
                    wreg 0009              _usartConfig 01F4             __CFG_LVP$OFF 0000  
                   l1241 015D                     l1321 0089                     l1251 0178  
                   l1331 009F                     l1315 0070                     l1247 016F  
                   l1239 0151                     l1263 0184                     l1343 00C4  
                   l1265 0190                     l1273 01A5                     l1353 00D1  
                   l1337 00A5                     l1347 00CC                     l1355 0054  
                   l1269 019C                     l1389 012C                     ?_isr 0070  
                   STR_1 01B4                     _BRGH 0CF2                     _RCIF 008D  
                   _TMR0 0015                     _SPEN 0CEF                     _TSEN 08BD  
                   _TXEN 0CF5                     _TXIF 008C                     _SYNC 0CF4  
           __CFG_WRT$OFF 0000                     _main 0107                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0042            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ??_isr 0070                    ?_main 003C            __CFG_WDTE$OFF 0000  
                  _T1CON 0018          __end_of___lwdiv 017D          __end_of___lwmod 01AA  
                  i1l187 003E                    _RCREG 0199                    _RCSTA 019D  
                  _TMR1H 0017                    _TMR1L 0016                    _SPBRG 019B  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  u59_25 001A                    _TSRNG 08BC                    _TXREG 019A  
                  _TXSTA 019E           __CFG_FCMEN$OFF 0000          __end_of_dpowers 01B4  
                  _count 0076                    _putch 01E5                    status 0003  
                  wtemp0 007E          __initialization 0044               _InitTimer0 01ED  
             _InitTimer1 01D7             __end_of_main 0148                   ??_main 0040  
         __CFG_PLLEN$OFF 0000                   _ANSELA 018C                   ?_putch 0070  
                 _ANSELB 018D                   _ANSELC 018E                   _T1GCON 0019  
                 i1l1181 0034                   _INTCON 000B                   _OSCCON 0099  
                 _TMR0IF 005A                   _TMR1IE 0488                   _TMR1IF 0088  
                 _TRISB4 046C                   _TRISB6 046E                   _TRISC4 0474  
                 _TRISC5 0475           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
              ??___lwdiv 0024                ??___lwmod 002C                   _printf 004F  
           ?_setup_comms 0070  __end_of__initialization 004B              ?_InitTimer0 0070  
            ?_InitTimer1 0070           __pcstackCOMMON 0070            __end_of_putch 01ED  
           ?_usartConfig 0070                  ??_putch 0020               __pbssBANK0 0042  
             __pmaintext 0107               __pintentry 0004                  _APFCON0 011D  
                ?_printf 002E                  _SSP1ADD 0212                  _SSP1BUF 0211  
    __size_of_InitTimer0 0007      __size_of_InitTimer1 000E                  _RXDTSEL 08EF  
                _TXCKSEL 08EA                  ___lwdiv 0148                  ___lwmod 017D  
                __ptext1 01F4                  __ptext2 01C6                  __ptext3 004F  
                __ptext4 01E5                  __ptext5 017D                  __ptext6 0148  
                __ptext7 01D7                  __ptext8 01ED          __size_of_printf 00B8  
                _counter 0078                  _dpowers 01AA             __size_of_isr 003E  
   end_of_initialization 004B     __size_of_setup_comms 0011                  printf@c 003B  
                printf@f 002E         __CFG_FOSC$INTOSC 0000     __size_of_usartConfig 0006  
           ??_InitTimer0 0020             ??_InitTimer1 0020           __end_of_printf 0107  
    start_initialization 0044              __end_of_isr 0042       __end_of_InitTimer0 01F4  
     __end_of_InitTimer1 01E5                 ??_printf 0032              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0022  
               ?___lwdiv 0020                 ?___lwmod 0028                _frequency 0042  
       ___lwdiv@quotient 0026           __size_of_putch 0008                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1STAT 0214               printf@flag 0037  
             printf@prec 0038            ??_setup_comms 0020         __size_of___lwdiv 0035  
       __size_of___lwmod 002D          ___lwdiv@divisor 0020            ??_usartConfig 0020  
        ___lwdiv@counter 0025             _SSP1CON2bits 0216            __size_of_main 0041  
    __end_of_setup_comms 01D7                 int$flags 007E                 main@argc 003C  
               main@argv 003E                printf@val 0039                putch@byte 0020  
               intlevel1 0000         ___lwmod@dividend 002A      __end_of_usartConfig 01FA  
      __CFG_CLKOUTEN$OFF 0000                 printf@ap 0036            __pstringtext1 01AA  
          __pstringtext2 0000               _OPTION_REG 0095          ___lwmod@divisor 0028  
        ___lwmod@counter 002D              _setup_comms 01C6  
